/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Data0x9101', null, global);
goog.exportSymbol('proto.Data0x9102', null, global);
goog.exportSymbol('proto.Data0x9105', null, global);
goog.exportSymbol('proto.Data0x9201', null, global);
goog.exportSymbol('proto.Data0x9202', null, global);
goog.exportSymbol('proto.Data0x9205', null, global);
goog.exportSymbol('proto.Data0x9206', null, global);
goog.exportSymbol('proto.Data0x9207', null, global);
goog.exportSymbol('proto.Data0x9301', null, global);
goog.exportSymbol('proto.Data0x9302', null, global);
goog.exportSymbol('proto.JT1087Protocol', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.JT1087Protocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.JT1087Protocol.oneofGroups_);
};
goog.inherits(proto.JT1087Protocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.JT1087Protocol.displayName = 'proto.JT1087Protocol';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.JT1087Protocol.oneofGroups_ = [[4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.JT1087Protocol.DatabodyCase = {
  DATABODY_NOT_SET: 0,
  DATA0X9101: 4,
  DATA0X9102: 5,
  DATA0X9105: 6,
  DATA0X9201: 7,
  DATA0X9202: 8,
  DATA0X9205: 9,
  DATA0X9206: 10,
  DATA0X9207: 11,
  DATA0X9301: 12,
  DATA0X9302: 13
};

/**
 * @return {proto.JT1087Protocol.DatabodyCase}
 */
proto.JT1087Protocol.prototype.getDatabodyCase = function() {
  return /** @type {proto.JT1087Protocol.DatabodyCase} */(jspb.Message.computeOneofCase(this, proto.JT1087Protocol.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.JT1087Protocol.prototype.toObject = function(opt_includeInstance) {
  return proto.JT1087Protocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.JT1087Protocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.JT1087Protocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    data0x9101: (f = msg.getData0x9101()) && proto.Data0x9101.toObject(includeInstance, f),
    data0x9102: (f = msg.getData0x9102()) && proto.Data0x9102.toObject(includeInstance, f),
    data0x9105: (f = msg.getData0x9105()) && proto.Data0x9105.toObject(includeInstance, f),
    data0x9201: (f = msg.getData0x9201()) && proto.Data0x9201.toObject(includeInstance, f),
    data0x9202: (f = msg.getData0x9202()) && proto.Data0x9202.toObject(includeInstance, f),
    data0x9205: (f = msg.getData0x9205()) && proto.Data0x9205.toObject(includeInstance, f),
    data0x9206: (f = msg.getData0x9206()) && proto.Data0x9206.toObject(includeInstance, f),
    data0x9207: (f = msg.getData0x9207()) && proto.Data0x9207.toObject(includeInstance, f),
    data0x9301: (f = msg.getData0x9301()) && proto.Data0x9301.toObject(includeInstance, f),
    data0x9302: (f = msg.getData0x9302()) && proto.Data0x9302.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.JT1087Protocol}
 */
proto.JT1087Protocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.JT1087Protocol;
  return proto.JT1087Protocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.JT1087Protocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.JT1087Protocol}
 */
proto.JT1087Protocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = new proto.Data0x9101;
      reader.readMessage(value,proto.Data0x9101.deserializeBinaryFromReader);
      msg.setData0x9101(value);
      break;
    case 5:
      var value = new proto.Data0x9102;
      reader.readMessage(value,proto.Data0x9102.deserializeBinaryFromReader);
      msg.setData0x9102(value);
      break;
    case 6:
      var value = new proto.Data0x9105;
      reader.readMessage(value,proto.Data0x9105.deserializeBinaryFromReader);
      msg.setData0x9105(value);
      break;
    case 7:
      var value = new proto.Data0x9201;
      reader.readMessage(value,proto.Data0x9201.deserializeBinaryFromReader);
      msg.setData0x9201(value);
      break;
    case 8:
      var value = new proto.Data0x9202;
      reader.readMessage(value,proto.Data0x9202.deserializeBinaryFromReader);
      msg.setData0x9202(value);
      break;
    case 9:
      var value = new proto.Data0x9205;
      reader.readMessage(value,proto.Data0x9205.deserializeBinaryFromReader);
      msg.setData0x9205(value);
      break;
    case 10:
      var value = new proto.Data0x9206;
      reader.readMessage(value,proto.Data0x9206.deserializeBinaryFromReader);
      msg.setData0x9206(value);
      break;
    case 11:
      var value = new proto.Data0x9207;
      reader.readMessage(value,proto.Data0x9207.deserializeBinaryFromReader);
      msg.setData0x9207(value);
      break;
    case 12:
      var value = new proto.Data0x9301;
      reader.readMessage(value,proto.Data0x9301.deserializeBinaryFromReader);
      msg.setData0x9301(value);
      break;
    case 13:
      var value = new proto.Data0x9302;
      reader.readMessage(value,proto.Data0x9302.deserializeBinaryFromReader);
      msg.setData0x9302(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.JT1087Protocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.JT1087Protocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.JT1087Protocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.JT1087Protocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getData0x9101();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Data0x9101.serializeBinaryToWriter
    );
  }
  f = message.getData0x9102();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Data0x9102.serializeBinaryToWriter
    );
  }
  f = message.getData0x9105();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Data0x9105.serializeBinaryToWriter
    );
  }
  f = message.getData0x9201();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.Data0x9201.serializeBinaryToWriter
    );
  }
  f = message.getData0x9202();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.Data0x9202.serializeBinaryToWriter
    );
  }
  f = message.getData0x9205();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Data0x9205.serializeBinaryToWriter
    );
  }
  f = message.getData0x9206();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.Data0x9206.serializeBinaryToWriter
    );
  }
  f = message.getData0x9207();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.Data0x9207.serializeBinaryToWriter
    );
  }
  f = message.getData0x9301();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.Data0x9301.serializeBinaryToWriter
    );
  }
  f = message.getData0x9302();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.Data0x9302.serializeBinaryToWriter
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.JT1087Protocol.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.JT1087Protocol.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.JT1087Protocol.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.JT1087Protocol.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.JT1087Protocol.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.JT1087Protocol.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Data0x9101 data0x9101 = 4;
 * @return {?proto.Data0x9101}
 */
proto.JT1087Protocol.prototype.getData0x9101 = function() {
  return /** @type{?proto.Data0x9101} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9101, 4));
};


/** @param {?proto.Data0x9101|undefined} value */
proto.JT1087Protocol.prototype.setData0x9101 = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9101 = function() {
  this.setData0x9101(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9101 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Data0x9102 data0x9102 = 5;
 * @return {?proto.Data0x9102}
 */
proto.JT1087Protocol.prototype.getData0x9102 = function() {
  return /** @type{?proto.Data0x9102} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9102, 5));
};


/** @param {?proto.Data0x9102|undefined} value */
proto.JT1087Protocol.prototype.setData0x9102 = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9102 = function() {
  this.setData0x9102(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9102 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Data0x9105 data0x9105 = 6;
 * @return {?proto.Data0x9105}
 */
proto.JT1087Protocol.prototype.getData0x9105 = function() {
  return /** @type{?proto.Data0x9105} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9105, 6));
};


/** @param {?proto.Data0x9105|undefined} value */
proto.JT1087Protocol.prototype.setData0x9105 = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9105 = function() {
  this.setData0x9105(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9105 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Data0x9201 data0x9201 = 7;
 * @return {?proto.Data0x9201}
 */
proto.JT1087Protocol.prototype.getData0x9201 = function() {
  return /** @type{?proto.Data0x9201} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9201, 7));
};


/** @param {?proto.Data0x9201|undefined} value */
proto.JT1087Protocol.prototype.setData0x9201 = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9201 = function() {
  this.setData0x9201(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9201 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Data0x9202 data0x9202 = 8;
 * @return {?proto.Data0x9202}
 */
proto.JT1087Protocol.prototype.getData0x9202 = function() {
  return /** @type{?proto.Data0x9202} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9202, 8));
};


/** @param {?proto.Data0x9202|undefined} value */
proto.JT1087Protocol.prototype.setData0x9202 = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9202 = function() {
  this.setData0x9202(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9202 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Data0x9205 data0x9205 = 9;
 * @return {?proto.Data0x9205}
 */
proto.JT1087Protocol.prototype.getData0x9205 = function() {
  return /** @type{?proto.Data0x9205} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9205, 9));
};


/** @param {?proto.Data0x9205|undefined} value */
proto.JT1087Protocol.prototype.setData0x9205 = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9205 = function() {
  this.setData0x9205(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9205 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Data0x9206 data0x9206 = 10;
 * @return {?proto.Data0x9206}
 */
proto.JT1087Protocol.prototype.getData0x9206 = function() {
  return /** @type{?proto.Data0x9206} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9206, 10));
};


/** @param {?proto.Data0x9206|undefined} value */
proto.JT1087Protocol.prototype.setData0x9206 = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9206 = function() {
  this.setData0x9206(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9206 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Data0x9207 data0x9207 = 11;
 * @return {?proto.Data0x9207}
 */
proto.JT1087Protocol.prototype.getData0x9207 = function() {
  return /** @type{?proto.Data0x9207} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9207, 11));
};


/** @param {?proto.Data0x9207|undefined} value */
proto.JT1087Protocol.prototype.setData0x9207 = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9207 = function() {
  this.setData0x9207(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9207 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Data0x9301 data0x9301 = 12;
 * @return {?proto.Data0x9301}
 */
proto.JT1087Protocol.prototype.getData0x9301 = function() {
  return /** @type{?proto.Data0x9301} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9301, 12));
};


/** @param {?proto.Data0x9301|undefined} value */
proto.JT1087Protocol.prototype.setData0x9301 = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9301 = function() {
  this.setData0x9301(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9301 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Data0x9302 data0x9302 = 13;
 * @return {?proto.Data0x9302}
 */
proto.JT1087Protocol.prototype.getData0x9302 = function() {
  return /** @type{?proto.Data0x9302} */ (
    jspb.Message.getWrapperField(this, proto.Data0x9302, 13));
};


/** @param {?proto.Data0x9302|undefined} value */
proto.JT1087Protocol.prototype.setData0x9302 = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.JT1087Protocol.oneofGroups_[0], value);
};


proto.JT1087Protocol.prototype.clearData0x9302 = function() {
  this.setData0x9302(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.JT1087Protocol.prototype.hasData0x9302 = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9101 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9101, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9101.displayName = 'proto.Data0x9101';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9101.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9101.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9101} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9101.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tcpport: jspb.Message.getFieldWithDefault(msg, 2, ""),
    udpport: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mediatype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    streamtype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    msgid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9101}
 */
proto.Data0x9101.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9101;
  return proto.Data0x9101.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9101} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9101}
 */
proto.Data0x9101.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTcpport(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUdpport(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediatype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStreamtype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9101.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9101.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9101} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9101.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTcpport();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUdpport();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMediatype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getStreamtype();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string ip = 1;
 * @return {string}
 */
proto.Data0x9101.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tcpPort = 2;
 * @return {string}
 */
proto.Data0x9101.prototype.getTcpport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setTcpport = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string udpPort = 3;
 * @return {string}
 */
proto.Data0x9101.prototype.getUdpport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setUdpport = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9101.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9101.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 mediaType = 5;
 * @return {number}
 */
proto.Data0x9101.prototype.getMediatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9101.prototype.setMediatype = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 streamType = 6;
 * @return {number}
 */
proto.Data0x9101.prototype.getStreamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Data0x9101.prototype.setStreamtype = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string msgId = 7;
 * @return {string}
 */
proto.Data0x9101.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string terminalPhone = 8;
 * @return {string}
 */
proto.Data0x9101.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string mainRoleId = 9;
 * @return {string}
 */
proto.Data0x9101.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.Data0x9101.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9102 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9102, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9102.displayName = 'proto.Data0x9102';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9102.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9102.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9102} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9102.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    command: jspb.Message.getFieldWithDefault(msg, 5, 0),
    closetype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    streamtype: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9102}
 */
proto.Data0x9102.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9102;
  return proto.Data0x9102.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9102} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9102}
 */
proto.Data0x9102.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommand(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClosetype(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStreamtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9102.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9102.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9102} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9102.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getClosetype();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStreamtype();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9102.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9102.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9102.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9102.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9102.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9102.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9102.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9102.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 command = 5;
 * @return {number}
 */
proto.Data0x9102.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9102.prototype.setCommand = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 closeType = 6;
 * @return {number}
 */
proto.Data0x9102.prototype.getClosetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Data0x9102.prototype.setClosetype = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 streamType = 7;
 * @return {number}
 */
proto.Data0x9102.prototype.getStreamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Data0x9102.prototype.setStreamtype = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9105 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9105, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9105.displayName = 'proto.Data0x9105';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9105.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9105.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9105} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9105.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    packetlossrate: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9105}
 */
proto.Data0x9105.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9105;
  return proto.Data0x9105.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9105} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9105}
 */
proto.Data0x9105.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPacketlossrate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9105.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9105.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9105} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9105.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPacketlossrate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9105.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9105.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9105.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9105.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9105.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9105.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9105.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9105.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string packetLossRate = 5;
 * @return {string}
 */
proto.Data0x9105.prototype.getPacketlossrate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Data0x9105.prototype.setPacketlossrate = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9201 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9201, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9201.displayName = 'proto.Data0x9201';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9201.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9201.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9201} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9201.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tcpport: jspb.Message.getFieldWithDefault(msg, 5, ""),
    udpport: jspb.Message.getFieldWithDefault(msg, 6, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mediatype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    streamtype: jspb.Message.getFieldWithDefault(msg, 9, 0),
    storagetype: jspb.Message.getFieldWithDefault(msg, 10, 0),
    playbackmode: jspb.Message.getFieldWithDefault(msg, 11, 0),
    playbackspeed: jspb.Message.getFieldWithDefault(msg, 12, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 13, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9201}
 */
proto.Data0x9201.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9201;
  return proto.Data0x9201.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9201} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9201}
 */
proto.Data0x9201.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTcpport(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUdpport(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediatype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStreamtype(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStoragetype(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaybackmode(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaybackspeed(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9201.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9201.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9201} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9201.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTcpport();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUdpport();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMediatype();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStreamtype();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPlaybackmode();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPlaybackspeed();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9201.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9201.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9201.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ip = 4;
 * @return {string}
 */
proto.Data0x9201.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tcpPort = 5;
 * @return {string}
 */
proto.Data0x9201.prototype.getTcpport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setTcpport = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string udpPort = 6;
 * @return {string}
 */
proto.Data0x9201.prototype.getUdpport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setUdpport = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 channelNo = 7;
 * @return {number}
 */
proto.Data0x9201.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 mediaType = 8;
 * @return {number}
 */
proto.Data0x9201.prototype.getMediatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setMediatype = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 streamType = 9;
 * @return {number}
 */
proto.Data0x9201.prototype.getStreamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setStreamtype = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 storageType = 10;
 * @return {number}
 */
proto.Data0x9201.prototype.getStoragetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setStoragetype = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 playbackMode = 11;
 * @return {number}
 */
proto.Data0x9201.prototype.getPlaybackmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setPlaybackmode = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 playbackSpeed = 12;
 * @return {number}
 */
proto.Data0x9201.prototype.getPlaybackspeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.Data0x9201.prototype.setPlaybackspeed = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string startTime = 13;
 * @return {string}
 */
proto.Data0x9201.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setStarttime = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string endTime = 14;
 * @return {string}
 */
proto.Data0x9201.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.Data0x9201.prototype.setEndtime = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9202 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9202, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9202.displayName = 'proto.Data0x9202';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9202.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9202.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9202} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9202.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    playbackmode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playbackspeed: jspb.Message.getFieldWithDefault(msg, 6, 0),
    playbacktime: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9202}
 */
proto.Data0x9202.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9202;
  return proto.Data0x9202.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9202} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9202}
 */
proto.Data0x9202.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaybackmode(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaybackspeed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaybacktime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9202.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9202.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9202} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9202.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPlaybackmode();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPlaybackspeed();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPlaybacktime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9202.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9202.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9202.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9202.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9202.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9202.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9202.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9202.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 playbackMode = 5;
 * @return {number}
 */
proto.Data0x9202.prototype.getPlaybackmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9202.prototype.setPlaybackmode = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 playbackSpeed = 6;
 * @return {number}
 */
proto.Data0x9202.prototype.getPlaybackspeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Data0x9202.prototype.setPlaybackspeed = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string playbackTime = 7;
 * @return {string}
 */
proto.Data0x9202.prototype.getPlaybacktime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Data0x9202.prototype.setPlaybacktime = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9205 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9205, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9205.displayName = 'proto.Data0x9205';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9205.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9205.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9205} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9205.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warnbit1: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warnbit2: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mediatype: jspb.Message.getFieldWithDefault(msg, 9, 0),
    streamtype: jspb.Message.getFieldWithDefault(msg, 10, 0),
    storagetype: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9205}
 */
proto.Data0x9205.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9205;
  return proto.Data0x9205.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9205} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9205}
 */
proto.Data0x9205.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarnbit1(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarnbit2(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediatype(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStreamtype(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStoragetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9205.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9205.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9205} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9205.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWarnbit1();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWarnbit2();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMediatype();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStreamtype();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9205.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9205.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9205.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9205.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9205.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string startTime = 5;
 * @return {string}
 */
proto.Data0x9205.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setStarttime = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string endTime = 6;
 * @return {string}
 */
proto.Data0x9205.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setEndtime = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string warnBit1 = 7;
 * @return {string}
 */
proto.Data0x9205.prototype.getWarnbit1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setWarnbit1 = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string warnBit2 = 8;
 * @return {string}
 */
proto.Data0x9205.prototype.getWarnbit2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.Data0x9205.prototype.setWarnbit2 = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 mediaType = 9;
 * @return {number}
 */
proto.Data0x9205.prototype.getMediatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Data0x9205.prototype.setMediatype = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 streamType = 10;
 * @return {number}
 */
proto.Data0x9205.prototype.getStreamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Data0x9205.prototype.setStreamtype = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 storageType = 11;
 * @return {number}
 */
proto.Data0x9205.prototype.getStoragetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Data0x9205.prototype.setStoragetype = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9206 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9206, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9206.displayName = 'proto.Data0x9206';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9206.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9206.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9206} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9206.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    path: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 6, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 7, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    warnbit1: jspb.Message.getFieldWithDefault(msg, 9, ""),
    warnbit2: jspb.Message.getFieldWithDefault(msg, 10, ""),
    mediatype: jspb.Message.getFieldWithDefault(msg, 11, 0),
    streamtype: jspb.Message.getFieldWithDefault(msg, 12, 0),
    storagetype: jspb.Message.getFieldWithDefault(msg, 13, 0),
    condition: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9206}
 */
proto.Data0x9206.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9206;
  return proto.Data0x9206.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9206} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9206}
 */
proto.Data0x9206.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarnbit1(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarnbit2(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediatype(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStreamtype(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStoragetype(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9206.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9206.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9206} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9206.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWarnbit1();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWarnbit2();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMediatype();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getStreamtype();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getStoragetype();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCondition();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional string ip = 1;
 * @return {string}
 */
proto.Data0x9206.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string port = 2;
 * @return {string}
 */
proto.Data0x9206.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setPort = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.Data0x9206.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setUsername = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.Data0x9206.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string path = 5;
 * @return {string}
 */
proto.Data0x9206.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setPath = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 channelNo = 6;
 * @return {number}
 */
proto.Data0x9206.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Data0x9206.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string startTime = 7;
 * @return {string}
 */
proto.Data0x9206.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setStarttime = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string endTime = 8;
 * @return {string}
 */
proto.Data0x9206.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setEndtime = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string warnBit1 = 9;
 * @return {string}
 */
proto.Data0x9206.prototype.getWarnbit1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setWarnbit1 = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string warnBit2 = 10;
 * @return {string}
 */
proto.Data0x9206.prototype.getWarnbit2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.Data0x9206.prototype.setWarnbit2 = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 mediaType = 11;
 * @return {number}
 */
proto.Data0x9206.prototype.getMediatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Data0x9206.prototype.setMediatype = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 streamType = 12;
 * @return {number}
 */
proto.Data0x9206.prototype.getStreamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.Data0x9206.prototype.setStreamtype = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 storageType = 13;
 * @return {number}
 */
proto.Data0x9206.prototype.getStoragetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Data0x9206.prototype.setStoragetype = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 condition = 14;
 * @return {number}
 */
proto.Data0x9206.prototype.getCondition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.Data0x9206.prototype.setCondition = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9207 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9207, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9207.displayName = 'proto.Data0x9207';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9207.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9207.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9207} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9207.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    responseserialno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    command: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9207}
 */
proto.Data0x9207.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9207;
  return proto.Data0x9207.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9207} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9207}
 */
proto.Data0x9207.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseserialno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9207.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9207.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9207} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9207.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResponseserialno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9207.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9207.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9207.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9207.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9207.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9207.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 responseSerialNo = 4;
 * @return {number}
 */
proto.Data0x9207.prototype.getResponseserialno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9207.prototype.setResponseserialno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 command = 5;
 * @return {number}
 */
proto.Data0x9207.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9207.prototype.setCommand = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9301 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9301, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9301.displayName = 'proto.Data0x9301';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9301.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9301.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9301} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9301.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    direction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    speed: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9301}
 */
proto.Data0x9301.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9301;
  return proto.Data0x9301.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9301} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9301}
 */
proto.Data0x9301.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirection(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9301.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9301.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9301} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9301.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9301.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9301.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9301.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9301.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9301.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9301.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9301.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9301.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 direction = 5;
 * @return {number}
 */
proto.Data0x9301.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9301.prototype.setDirection = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 speed = 6;
 * @return {number}
 */
proto.Data0x9301.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Data0x9301.prototype.setSpeed = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x9302 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x9302, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x9302.displayName = 'proto.Data0x9302';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x9302.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x9302.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x9302} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9302.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelno: jspb.Message.getFieldWithDefault(msg, 4, 0),
    param: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x9302}
 */
proto.Data0x9302.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x9302;
  return proto.Data0x9302.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x9302} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x9302}
 */
proto.Data0x9302.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainroleid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x9302.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x9302.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x9302} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x9302.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelno();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getParam();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string msgId = 1;
 * @return {string}
 */
proto.Data0x9302.prototype.getMsgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x9302.prototype.setMsgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0x9302.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x9302.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string mainRoleId = 3;
 * @return {string}
 */
proto.Data0x9302.prototype.getMainroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x9302.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 channelNo = 4;
 * @return {number}
 */
proto.Data0x9302.prototype.getChannelno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Data0x9302.prototype.setChannelno = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 param = 5;
 * @return {number}
 */
proto.Data0x9302.prototype.getParam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Data0x9302.prototype.setParam = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto);
