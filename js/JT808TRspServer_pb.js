/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Data0X8103', null, global);
goog.exportSymbol('proto.Data0x0104', null, global);
goog.exportSymbol('proto.Data0x0107', null, global);
goog.exportSymbol('proto.ResProtocol', null, global);
goog.exportSymbol('proto.ResProtocol.Code', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ResProtocol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ResProtocol.oneofGroups_);
};
goog.inherits(proto.ResProtocol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ResProtocol.displayName = 'proto.ResProtocol';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ResProtocol.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.ResProtocol.DatabodyCase = {
  DATABODY_NOT_SET: 0,
  DATA0X8103: 3,
  DATA0X0104: 4,
  DATA0X0107: 5
};

/**
 * @return {proto.ResProtocol.DatabodyCase}
 */
proto.ResProtocol.prototype.getDatabodyCase = function() {
  return /** @type {proto.ResProtocol.DatabodyCase} */(jspb.Message.computeOneofCase(this, proto.ResProtocol.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ResProtocol.prototype.toObject = function(opt_includeInstance) {
  return proto.ResProtocol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ResProtocol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResProtocol.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data0x8103: (f = msg.getData0x8103()) && proto.Data0X8103.toObject(includeInstance, f),
    data0x0104: (f = msg.getData0x0104()) && proto.Data0x0104.toObject(includeInstance, f),
    data0x0107: (f = msg.getData0x0107()) && proto.Data0x0107.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ResProtocol}
 */
proto.ResProtocol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ResProtocol;
  return proto.ResProtocol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ResProtocol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ResProtocol}
 */
proto.ResProtocol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ResProtocol.Code} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new proto.Data0X8103;
      reader.readMessage(value,proto.Data0X8103.deserializeBinaryFromReader);
      msg.setData0x8103(value);
      break;
    case 4:
      var value = new proto.Data0x0104;
      reader.readMessage(value,proto.Data0x0104.deserializeBinaryFromReader);
      msg.setData0x0104(value);
      break;
    case 5:
      var value = new proto.Data0x0107;
      reader.readMessage(value,proto.Data0x0107.deserializeBinaryFromReader);
      msg.setData0x0107(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ResProtocol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ResProtocol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ResProtocol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResProtocol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData0x8103();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Data0X8103.serializeBinaryToWriter
    );
  }
  f = message.getData0x0104();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Data0x0104.serializeBinaryToWriter
    );
  }
  f = message.getData0x0107();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Data0x0107.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ResProtocol.Code = {
  CODE0: 0,
  CODE1: 1
};

/**
 * optional Code code = 1;
 * @return {!proto.ResProtocol.Code}
 */
proto.ResProtocol.prototype.getCode = function() {
  return /** @type {!proto.ResProtocol.Code} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ResProtocol.Code} value */
proto.ResProtocol.prototype.setCode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.ResProtocol.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ResProtocol.prototype.setMsg = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Data0X8103 data0X8103 = 3;
 * @return {?proto.Data0X8103}
 */
proto.ResProtocol.prototype.getData0x8103 = function() {
  return /** @type{?proto.Data0X8103} */ (
    jspb.Message.getWrapperField(this, proto.Data0X8103, 3));
};


/** @param {?proto.Data0X8103|undefined} value */
proto.ResProtocol.prototype.setData0x8103 = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.ResProtocol.oneofGroups_[0], value);
};


proto.ResProtocol.prototype.clearData0x8103 = function() {
  this.setData0x8103(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ResProtocol.prototype.hasData0x8103 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Data0x0104 data0x0104 = 4;
 * @return {?proto.Data0x0104}
 */
proto.ResProtocol.prototype.getData0x0104 = function() {
  return /** @type{?proto.Data0x0104} */ (
    jspb.Message.getWrapperField(this, proto.Data0x0104, 4));
};


/** @param {?proto.Data0x0104|undefined} value */
proto.ResProtocol.prototype.setData0x0104 = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.ResProtocol.oneofGroups_[0], value);
};


proto.ResProtocol.prototype.clearData0x0104 = function() {
  this.setData0x0104(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ResProtocol.prototype.hasData0x0104 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Data0x0107 data0x0107 = 5;
 * @return {?proto.Data0x0107}
 */
proto.ResProtocol.prototype.getData0x0107 = function() {
  return /** @type{?proto.Data0x0107} */ (
    jspb.Message.getWrapperField(this, proto.Data0x0107, 5));
};


/** @param {?proto.Data0x0107|undefined} value */
proto.ResProtocol.prototype.setData0x0107 = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.ResProtocol.oneofGroups_[0], value);
};


proto.ResProtocol.prototype.clearData0x0107 = function() {
  this.setData0x0107(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ResProtocol.prototype.hasData0x0107 = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0X8103 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0X8103, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0X8103.displayName = 'proto.Data0X8103';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0X8103.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0X8103.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0X8103} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0X8103.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    terminalphone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mainroleid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0X8103}
 */
proto.Data0X8103.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0X8103;
  return proto.Data0X8103.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0X8103} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0X8103}
 */
proto.Data0X8103.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalphone(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainroleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0X8103.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0X8103.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0X8103} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0X8103.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsgid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTerminalphone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMainroleid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 msgId = 1;
 * @return {number}
 */
proto.Data0X8103.prototype.getMsgid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Data0X8103.prototype.setMsgid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string terminalPhone = 2;
 * @return {string}
 */
proto.Data0X8103.prototype.getTerminalphone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0X8103.prototype.setTerminalphone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 mainRoleId = 3;
 * @return {number}
 */
proto.Data0X8103.prototype.getMainroleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Data0X8103.prototype.setMainroleid = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x0104 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x0104, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x0104.displayName = 'proto.Data0x0104';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x0104.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x0104.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x0104} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x0104.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    values: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x0104}
 */
proto.Data0x0104.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x0104;
  return proto.Data0x0104.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x0104} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x0104}
 */
proto.Data0x0104.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstructcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x0104.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x0104.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x0104} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x0104.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstructcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValues();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instructCode = 1;
 * @return {string}
 */
proto.Data0x0104.prototype.getInstructcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x0104.prototype.setInstructcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string values = 3;
 * @return {string}
 */
proto.Data0x0104.prototype.getValues = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x0104.prototype.setValues = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data0x0107 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Data0x0107, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Data0x0107.displayName = 'proto.Data0x0107';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Data0x0107.prototype.toObject = function(opt_includeInstance) {
  return proto.Data0x0107.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Data0x0107} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x0107.toObject = function(includeInstance, msg) {
  var f, obj = {
    manufacturerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    terminalmodel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    terminalid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    iccid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    thvnum: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tfvnum: jspb.Message.getFieldWithDefault(msg, 6, ""),
    supportgps: jspb.Message.getFieldWithDefault(msg, 7, false),
    supportbeidou: jspb.Message.getFieldWithDefault(msg, 8, false),
    supportglonass: jspb.Message.getFieldWithDefault(msg, 9, false),
    supportgalileo: jspb.Message.getFieldWithDefault(msg, 10, false),
    supportgprs: jspb.Message.getFieldWithDefault(msg, 11, false),
    supportcdma: jspb.Message.getFieldWithDefault(msg, 12, false),
    supporttdscdma: jspb.Message.getFieldWithDefault(msg, 13, false),
    supportwcdma: jspb.Message.getFieldWithDefault(msg, 14, false),
    supportcdma2000: jspb.Message.getFieldWithDefault(msg, 15, false),
    supporttdlte: jspb.Message.getFieldWithDefault(msg, 16, false),
    supportother: jspb.Message.getFieldWithDefault(msg, 17, false),
    supportbus: jspb.Message.getFieldWithDefault(msg, 18, false),
    supportdangervehicle: jspb.Message.getFieldWithDefault(msg, 19, false),
    supportfreightvehicle: jspb.Message.getFieldWithDefault(msg, 20, false),
    supporttaxi: jspb.Message.getFieldWithDefault(msg, 21, false),
    supportrecording: jspb.Message.getFieldWithDefault(msg, 22, false),
    supportextension: jspb.Message.getFieldWithDefault(msg, 23, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data0x0107}
 */
proto.Data0x0107.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Data0x0107;
  return proto.Data0x0107.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data0x0107} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data0x0107}
 */
proto.Data0x0107.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalmodel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminalid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIccid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThvnum(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTfvnum(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportgps(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportbeidou(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportglonass(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportgalileo(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportgprs(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportcdma(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupporttdscdma(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportwcdma(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportcdma2000(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupporttdlte(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportother(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportbus(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportdangervehicle(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportfreightvehicle(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupporttaxi(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportrecording(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportextension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data0x0107.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Data0x0107.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data0x0107} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data0x0107.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getManufacturerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTerminalmodel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTerminalid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIccid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThvnum();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTfvnum();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSupportgps();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSupportbeidou();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSupportglonass();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSupportgalileo();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getSupportgprs();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getSupportcdma();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getSupporttdscdma();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getSupportwcdma();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getSupportcdma2000();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getSupporttdlte();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getSupportother();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getSupportbus();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getSupportdangervehicle();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getSupportfreightvehicle();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getSupporttaxi();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getSupportrecording();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSupportextension();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
};


/**
 * optional string manufacturerId = 1;
 * @return {string}
 */
proto.Data0x0107.prototype.getManufacturerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setManufacturerid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string terminalModel = 2;
 * @return {string}
 */
proto.Data0x0107.prototype.getTerminalmodel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setTerminalmodel = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string terminalId = 3;
 * @return {string}
 */
proto.Data0x0107.prototype.getTerminalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setTerminalid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string iccId = 4;
 * @return {string}
 */
proto.Data0x0107.prototype.getIccid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setIccid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string thvNum = 5;
 * @return {string}
 */
proto.Data0x0107.prototype.getThvnum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setThvnum = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tfvNum = 6;
 * @return {string}
 */
proto.Data0x0107.prototype.getTfvnum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Data0x0107.prototype.setTfvnum = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool supportGps = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportgps = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportgps = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool supportBeidou = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportbeidou = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportbeidou = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool supportGlonass = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportglonass = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportglonass = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool supportGalileo = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportgalileo = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportgalileo = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool supportGprs = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportgprs = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportgprs = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool supportCdma = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportcdma = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportcdma = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool supportTdscdma = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupporttdscdma = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupporttdscdma = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool supportWcdma = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportwcdma = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportwcdma = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool supportCdma2000 = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportcdma2000 = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportcdma2000 = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool supportTdlte = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupporttdlte = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupporttdlte = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool supportOther = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportother = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportother = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool supportBus = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportbus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportbus = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool supportDangerVehicle = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportdangervehicle = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportdangervehicle = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool supportFreightVehicle = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportfreightvehicle = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportfreightvehicle = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool supportTaxi = 21;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupporttaxi = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupporttaxi = function(value) {
  jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool supportRecording = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportrecording = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportrecording = function(value) {
  jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool supportExtension = 23;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Data0x0107.prototype.getSupportextension = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 23, false));
};


/** @param {boolean} value */
proto.Data0x0107.prototype.setSupportextension = function(value) {
  jspb.Message.setProto3BooleanField(this, 23, value);
};


goog.object.extend(exports, proto);
